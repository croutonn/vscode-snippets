{
  "NextPage_SSG": {
    "prefix": [
      "npage",
      "nextpage",
      "npssg"
    ],
    "body": "import { GetStaticProps, GetStaticPaths, NextPage } from 'next'\n\ntype ${1:$TM_FILENAME_BASE}Params = {\n\tslug: string\n}\n\ntype ${1:$TM_FILENAME_BASE}Props = {}\n\nconst ${1:$TM_FILENAME_BASE}: NextPage<${1:$TM_FILENAME_BASE}Props> = (props) => {\n\treturn (\n\t\t<>\n\t\t\t${2}\n\t\t</>\n\t)\n}\n\nconst getStaticPaths: GetStaticPaths<${1:$TM_FILENAME_BASE}Params> = async () => {\n\treturn {\n\t\tpaths: [],\n\t\tfallback: false,\n\t}\n}\n\nconst getStaticProps: GetStaticProps<${1:$TM_FILENAME_BASE}Props, ${1:$TM_FILENAME_BASE}Params> = async (context) => {\n\tconst props: ${1:$TM_FILENAME_BASE}Props = {}\n\treturn {\n\t\tprops,\n\t}\n}\n\nexport default ${1:$TM_FILENAME_BASE}\nexport { getStaticPaths, getStaticProps }",
    "description": "Next.js Page for SSG",
    "scope": "typescriptreact"
  },
  "NextPage_SSR": {
    "prefix": [
      "npage",
      "nextpage",
      "npssr"
    ],
    "body": "import { GetServerSideProps, NextPage } from 'next'\n\ntype ${1:$TM_FILENAME_BASE}Params = {\n\tslug: string\n}\n\ntype ${1:$TM_FILENAME_BASE}Props = {}\n\nconst ${1:$TM_FILENAME_BASE}: NextPage<${1:$TM_FILENAME_BASE}Props> = (props) => {\n\treturn (\n\t\t<>\n\t\t\t${2}\n\t\t</>\n\t)\n}\n\nconst getServerSideProps: GetServerSideProps<${1:$TM_FILENAME_BASE}Props, ${1:$TM_FILENAME_BASE}Params> = async (context) => {\n\tconst props: ${1:$TM_FILENAME_BASE}Props = {}\n\treturn {\n\t\tprops,\n\t}\n}\n\nexport default ${1:$TM_FILENAME_BASE}\nexport { getServerSideProps }",
    "description": "Next.js Page for SSR",
    "scope": "typescriptreact"
  },
  "PreviewReset_API": {
    "prefix": "nprev",
    "body": "import { NextApiHandler } from 'next'\n\ntype ResponseBodyType = unknown\n\nconst previewResetHandler: NextApiHandler<ResponseBodyType> = (request, response): void => {\n\tresponse.clearPreviewData()\n\tresponse.status(200).end()\n}\n\nexport default previewResetHandler",
    "description": "Next.js Preview Reset API",
    "scope": "typescript"
  },
  "Preview_API": {
    "prefix": "nprev",
    "body": "import { NextApiHandler } from 'next'\n\ntype ResponseBodyType = unknown\n\nconst previewHandler: NextApiHandler<ResponseBodyType> = (request, response): void => {\n\tconst previewData = {}\n\tresponse.setPreviewData(previewData)\n\tresponse.status(200).end()\n}\n\nexport default previewHandler",
    "description": "Next.js Preview API",
    "scope": "typescript"
  },
  "RuntimeConfiguration": {
    "prefix": "nrun",
    "body": "import getConfig from 'next/config'\n\nconst { publicRuntimeConfig, serverRuntimeConfig } = getConfig() as {\n  publicRuntimeConfig: Record<string, unknown>\n  serverRuntimeConfig: Record<string, unknown>\n}",
    "description": "Next.js Runtime Configuration",
    "scope": "typescript,typescriptreact"
  },
  "getServerSideProps": {
    "prefix": [
      "nget",
      "gssp"
    ],
    "body": "import { GetServerSideProps } from 'next'\n\ntype ${1:$TM_FILENAME_BASE}Params = {\n\tslug: string\n}\n\ntype ${1:$TM_FILENAME_BASE}Props = {}\n\nexport const getServerSideProps: GetServerSideProps<${1:$TM_FILENAME_BASE}Props, ${1:$TM_FILENAME_BASE}Params> = async (context) => {\n\tconst props: ${1:$TM_FILENAME_BASE}Props = {}\n\treturn {\n\t\tprops,\n\t}\n}",
    "description": "Next.js GetServerSideProps",
    "scope": "typescriptreact"
  },
  "getStaticPaths": {
    "prefix": [
      "nget",
      "gsp"
    ],
    "body": "import { GetStaticPaths } from 'next'\n\ntype ${1:$TM_FILENAME_BASE}Params = {\n\tslug: string\n}\n\nexport const getStaticPaths: GetStaticPaths<${1:$TM_FILENAME_BASE}Params> = async () => {\n\treturn {\n\t\tpaths: [],\n\t\tfallback: false,\n\t}\n}",
    "description": "Next.js GetStaticPaths",
    "scope": "typescriptreact"
  },
  "getStaticProps": {
    "prefix": [
      "nget",
      "gsp"
    ],
    "body": "import { GetStaticProps } from 'next'\n\ntype ${1:$TM_FILENAME_BASE}Params = {\n\tslug: string\n}\n\ntype ${1:$TM_FILENAME_BASE}Props = {}\n\nexport const getStaticProps: GetStaticProps<${1:$TM_FILENAME_BASE}Props, ${1:$TM_FILENAME_BASE}Params> = async (context) => {\n    const props: ${1:$TM_FILENAME_BASE}Props = {}\n\treturn {\n\t\tprops,\n\t}\n}",
    "description": "Next.js GetStaticProps",
    "scope": "typescriptreact"
  }
}